name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Cache das dependências do NPM
    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Instalar dependências
    - name: Install dependencies
      run: npm ci
      working-directory: hello-pipeline

    # Executar ESLint para verificar qualidade do código
    - name: Run ESLint
      run: npm run lint
      working-directory: hello-pipeline

    # Build da aplicação (se aplicável)
    - name: Build application
      run: npm run build --if-present
      working-directory: hello-pipeline

    # Executar testes com cobertura
    - name: Run tests with coverage
      run: npm run test:coverage
      working-directory: hello-pipeline

    # Upload do relatório de cobertura de código
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: hello-pipeline/coverage
